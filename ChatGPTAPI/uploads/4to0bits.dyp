Welcome to the course of dependency injection in Natcore before we deep dive into implementation ofdependency injection in court.Let's see what dependency injection is and where it comes from.The dependency injection mainly comes from an object oriented design principle, which says concreteclasses must not be dependent on each other if they are dependent on each other.Then we say that they are highly coupled and opposite when they are not depending on each other.We say that there is low coupling.Many of you are familiar with that three layer application architecture.In this architecture, you have a user interface on the top.User interface is normally called a presentation layer.You can think of it as an NBC view or a class in a console application that gets the information fromthe user.For example, if a user wants to create a new account in our system or sign up, they put their emailaddress, username and password and they click on the submit button.The class that accepts the data from the user is your user interface or the presentation class or presentationlayer.Once the presentation layer gets the information, it passes it to another layer or class, which iscalled business class or business layer.Business class is responsible for performing the crosscutting concerns, including validation.Once the business class approves the validity of data, it passes it to the data access layer or dataaccess class, which is responsible for actually storing data in a database.